{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/michaelchrupcala/projects/eth/tweether/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaelchrupcala/projects/eth/tweether/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/michaelchrupcala/projects/eth/tweether/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelchrupcala/projects/eth/tweether/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/michaelchrupcala/projects/eth/tweether/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/michaelchrupcala/projects/eth/tweether/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelchrupcala/projects/eth/tweether/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/michaelchrupcala/projects/eth/tweether/web/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { isUserEthereumAddressInBloom } from 'web3-utils';\nimport { eth } from '../web3/provider';\n\nvar IndexPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(IndexPage, _React$Component);\n\n  var _super = _createSuper(IndexPage);\n\n  function IndexPage() {\n    _classCallCheck(this, IndexPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(IndexPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var addresses;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return ethereum.enable();\n\n              case 3:\n                _context.next = 5;\n                return eth.getAccounts();\n\n              case 5:\n                addresses = _context.sent;\n                // Get user's ETH addresses\n                console.log(addresses);\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(\"User denied access to their ETH addresses!\");\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hello world!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return IndexPage;\n}(React.Component);\n\nexport { IndexPage as default };","map":{"version":3,"sources":["/Users/michaelchrupcala/projects/eth/tweether/web/pages/index.js"],"names":["React","isUserEthereumAddressInBloom","eth","IndexPage","ethereum","enable","getAccounts","addresses","console","log","error","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,4BAAT,QAA6C,YAA7C;AACA,SAASC,GAAT,QAAoB,kBAApB;;IAEqBC,S;;;;;;;;;;;;;;;;;;;;;;uBAGHC,QAAQ,CAACC,MAAT,E;;;;uBACkBH,GAAG,CAACI,WAAJ,E;;;AAAlBC,gBAAAA,S;AAAqC;AAC3CC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;;;;;;AAEAC,gBAAAA,OAAO,CAACE,KAAR,CAAc,4CAAd;;;;;;;;;;;;;;;;;;6BAIC;AACL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;;;EAfkCV,KAAK,CAACW,S;;SAAxBR,S","sourcesContent":["import React from 'react';\nimport { isUserEthereumAddressInBloom } from 'web3-utils';\nimport { eth } from '../web3/provider';\n\nexport default class IndexPage extends React.Component {    \n    async componentDidMount() {\n        try {\n            await ethereum.enable() // Prompt user to let our DApp access their addresses\n            const addresses = await eth.getAccounts(); // Get user's ETH addresses\n            console.log(addresses);\n        } catch (err) {\n            console.error(\"User denied access to their ETH addresses!\");\n        }\n    }\n    \n    render() {\n        return (\n            <h1>hello world!</h1>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}